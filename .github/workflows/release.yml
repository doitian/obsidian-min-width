name: Release Obsidian Plugin
on:
  workflow_dispatch: {}

jobs:
  create-release:
    name: Create release
    runs-on: ubuntu-20.04

    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}
      tag: ${{ steps.version.outputs.tag }}

    steps:
      - uses: actions/checkout@v3

      - name: Get Version
        id: version
        run: |
          echo "::set-output name=tag::$(cat manifest.json | sed -n 's/",$//; s/.*"version": "//p')"

      - name: Create release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          release_name: ${{ steps.version.outputs.tag }}
          draft: true
          prerelease: false

  upload-files:
    name: Upload Files to Release
    runs-on: ubuntu-20.04
    needs:
      - create-release

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "16.x"
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: Build
        run: |
          npm ci
          npm run build --if-present

      - name: Package
        run: |
          export PACKAGE_BASENAME = "${{ github.event.repository.name }}-${{ needs.create-release.outputs.tag }}"
          mkdir -p "$PACKAGE_BASENAME"
          cp main.js manifest.json README.md "$PACKAGE_BASENAME"
          zip -r "$PACKAGE_BASENAME.zip" "$PACKAGE_BASENAME"

      - name: Upload zip file
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_name: "${{ github.event.repository.name }}-${{ needs.create-release.outputs.tag }}.zip"
          asset_pass: "${{ github.workspace }}/${{ github.event.repository.name }}-${{ needs.create-release.outputs.tag }}.zip"
          asset_content_type: application/zip

      - name: Upload main.js
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: "${{ github.workspace }}/main.js"
          asset_name: main.js
          asset_content_type: text/javascript

      - name: Upload manifest.json
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: "${{ github.workspace }}/manifest.json"
          asset_name: manifest.json
          asset_content_type: application/json
